# Generated by Django 5.0.7 on 2024-08-17 15:38

import django.contrib.auth.models
import django.contrib.auth.validators
import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Filmes',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=30)),
                ('diretor', models.CharField(blank=True, max_length=30, null=True)),
                ('duracao', models.TimeField(blank=True, null=True)),
                ('classificacao', models.CharField(choices=[('opcao1', 'Livre'), ('opcao2', '10'), ('opcao3', '12'), ('opcao4', '14'), ('opcao5', '16'), ('opcao6', '18')], max_length=20)),
                ('desc', models.TextField(max_length=200)),
                ('data', models.DateField(blank=True, null=True)),
                ('nota_media', models.DecimalField(blank=True, decimal_places=1, max_digits=3, null=True)),
                ('poster', models.ImageField(blank=True, upload_to='filmes/')),
            ],
            options={
                'verbose_name': 'Filme',
            },
        ),
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('is_admin', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Noticias',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=31, validators=[django.core.validators.MinLengthValidator(5)])),
                ('imagem', models.ImageField(blank=True, upload_to='noticias/')),
                ('texto', models.TextField(max_length=684, validators=[django.core.validators.MinLengthValidator(5)])),
                ('data', models.DateTimeField(auto_now_add=True)),
                ('mostrar', models.BooleanField(default=False)),
                ('usuario', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Noticia',
            },
        ),
        migrations.CreateModel(
            name='ReviewsFilmes',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data', models.DateTimeField(auto_now_add=True, null=True)),
                ('review', models.TextField(max_length=250)),
                ('nota', models.FloatField(validators=[django.core.validators.MinValueValidator(0, 0), django.core.validators.MaxValueValidator(10, 0)])),
                ('show', models.BooleanField(default=False)),
                ('filme', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reviews', to='gestao.filmes')),
                ('usuario', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Review - Filme',
            },
        ),
        migrations.AddField(
            model_name='filmes',
            name='avaliacoes',
            field=models.ManyToManyField(through='gestao.ReviewsFilmes', to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='ReviewsSeries',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data', models.DateTimeField(auto_now_add=True, null=True)),
                ('review', models.TextField(max_length=250)),
                ('nota', models.FloatField(validators=[django.core.validators.MinValueValidator(0, 0), django.core.validators.MaxValueValidator(10, 0)])),
                ('show', models.BooleanField(default=False)),
                ('usuario', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Review - Serie',
            },
        ),
        migrations.CreateModel(
            name='Series',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('poster', models.ImageField(blank=True, upload_to='series/')),
                ('nome', models.CharField(max_length=31)),
                ('diretor', models.CharField(blank=True, max_length=31, null=True)),
                ('data', models.DateField(blank=True, null=True)),
                ('data_termino', models.DateField(blank=True, null=True)),
                ('episodios', models.PositiveSmallIntegerField()),
                ('temporadas', models.PositiveSmallIntegerField()),
                ('sinopse', models.TextField(max_length=200)),
                ('nota_media', models.DecimalField(blank=True, decimal_places=1, max_digits=3, null=True)),
                ('avaliacoes', models.ManyToManyField(through='gestao.ReviewsSeries', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Serie',
            },
        ),
        migrations.AddField(
            model_name='reviewsseries',
            name='serie',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reviews', to='gestao.series'),
        ),
    ]
